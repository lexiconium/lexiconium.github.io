<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>review on What Did I Say?</title>
    <link>https://lexiconium.github.io/tags/review/</link>
    <description>Recent content in review on What Did I Say?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 19 Jul 2023 17:10:12 +0900</lastBuildDate><atom:link href="https://lexiconium.github.io/tags/review/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retentive Network: A Successor to Transformer for Large Language Models 리뷰</title>
      <link>https://lexiconium.github.io/posts/retentive_network/</link>
      <pubDate>Wed, 19 Jul 2023 17:10:12 +0900</pubDate>
      
      <guid>https://lexiconium.github.io/posts/retentive_network/</guid>
      <description>트랜스포머 아키텍쳐가 2017년에 등장한 이후 다양한 영역에서 그 유용성을 입증했고 따라서 현대 딥러닝 아키텍쳐의 표준으로 자리매김 했다 해도 과언이 아닐 것이라 생각합니다. 다만 그런 트랜스포머 아키텍쳐 (혹은 어텐션 메커니즘)에도 단점은 있으니, 바로 높은 코스트입니다. 특히 트랜스포머의 parallelism은 학습시엔 유용하지만 이를 추론 때 역시 강제하여 시퀀스 길이에 quadratic한 자원을 요구하게 합니다.
Fig. 1. &amp;ldquo;Impossible triangle&amp;rdquo;. RetNet(Retentive Network)은 불가능을 가능케 합니다. [1]
이를 극복하기 위해 연구진은 두 가지 표현 방식(recurrent, parallel)을 취할 수 있는 retention mechanism을 제안합니다.</description>
    </item>
    
    <item>
      <title>OpenAI의 Video PreTraining (VPT) 리뷰</title>
      <link>https://lexiconium.github.io/posts/openai_vpt/</link>
      <pubDate>Wed, 06 Jul 2022 18:01:45 +0900</pubDate>
      
      <guid>https://lexiconium.github.io/posts/openai_vpt/</guid>
      <description>최근 수 년간 많은 pretrained 모델들이 다양한 downstream task들에서 활약하며 방대한 규모의, 논문에서 말하길 noisy internet-scale, dataset을 통한 pretraining 패러다임이 natural language processing 및 computer vision 분야에서 유효하다는 것이 증명됐다. 다만 이와 같은 방법론이 아직 널리 퍼지지 않은 분야가 있는데, 바로 로보틱스, 게이밍 및 컴퓨터 사용 등의 sequential decision 분야이다. 이에 대한 유인은 sequential decision과 관련된 data 그 자체는 풍부하나 그러한 data의 대부분이 직전 프레임에서 어떤 행동을 취해야 다음 프레임으로 넘어가는지에 대한 정보를 포함하고 있지 않음에 있다.</description>
    </item>
    
  </channel>
</rss>
